apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: msmapper-notebook
  labels:
    workflows.diamond.ac.uk/science-group: magnetic-materials-group
  annotations:
    workflows.argoproj.io/title: Reciprocal Space Mapper
    workflows.argoproj.io/description: |
      Runs the msmapper program to re-map detector images
      from i16 NeXus files into reciprocal lattice units.
    workflows.diamond.ac.uk/repository: "<a href=https://github.com/DiamondLightSource/magnetic-materials-workflows>magnetic-materials-workflows</>"
    workflows.diamond.ac.uk/parameter-schema.scan_numbers: |
      {
        "type": "string",
        "default": "12345, 12346"
      }
    workflows.diamond.ac.uk/parameter-schema.step: |
      {
        "type": "string",
        "default": "0.002"
      }
    workflows.diamond.ac.uk/parameter-schema.reduce_box: |
      {
        "type": "boolean"
        "default": true
      }
    workflows.diamond.ac.uk/parameter-schema.normalisation: |
      {
        "type": "string",
        "oneOf": [
          {
            "const": "rc",
            "title": "Ring Current"
          },
          {
            "const": "ic1monitor",
            "title": "Monitor"
          }
        ],
        "default": "rc"
      }
    workflows.diamond.ac.uk/ui-schema: |
      {
        "type": "VerticalLayout",
        "elements": [
          {
            "type": "Control",
            "scope": "#/properties/scan_numbers",
            "label": "Scan Numbers"
          },
          {
            "type": "Control",
            "scope": "#/properties/step",
            "label": "HKL Step"
          },
          {
            "type": "Control",
            "scope": "#/properties/normalisation",
            "label": "Normalisation"
          },
          {
            "type": "Control",
            "scope": "#/properties/reduce_box",
            "label": "Reduce size"
          }
        ]
      }

spec:
  entrypoint: msmapper-notebook
  arguments:
    parameters:
      - name: visitdir
        valueFrom:
          configMapKeyRef:
            name: sessionspaces
            key: data_directory
      - name: scan_numbers
        value: "12345, 12346"
      - name: step
        value: "[0.002]"
      - name: reduce_box
        value: true
      - name: normalisation
        value: 'rc'
  volumes:
    - name: session
      hostPath:
        path: "{{`{{ workflow.parameters.visitdir }}`}}"
        type: Directory
  volumeClaimTemplates:
    - metadata:
        name: tmp
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: local-path

  templates:
    - name: run-msmapper-notebook
      script:
        image: ghcr.io/diamondlightsource/magnetic-materials-workflows:0.2.0-rc1
        command: [bash]
        source: |
          # mount-files
          echo '{{ .Files.Get "notebooks/msmapper_notebook.ipynb" | b64enc }}' | base64 -d > /tmp/notebook.ipynb
          # create matplotlib config dir
          mkdir -p /tmp/mpl
          export MPLCONFIGDIR=/tmp/mpl
          # set msmapper java options
          export JAVA_TOOL_OPTIONS=-Duser.name=workflows
          # install mmg_toolbox from github repo
          mkdir -p /tmp/packages
          export PYTHONPATH=/tmp/packages
          python -m pip install -t /tmp/packages --upgrade --no-cache-dir git+https://github.com/DiamondLightSource/i16_msmapper.git
          # run notebook
          python -m papermill /tmp/notebook.ipynb /tmp/notebook.ipynb \
            -p datadir "{{`{{ workflow.parameters.visitdir }}`}}" \
            -p scan_numbers "{{`{{ workflow.parameters.scan_numbers }}`}}" \
            -p step "{{`{{ workflow.parameters.step }}`}}"
            -p reduce_box "{{`{{ workflow.parameters.reduce_box }}`}}"
            -p normalisation "{{`{{ workflow.parameters.normalisation }}`}}"
          python -m nbconvert --execute --allow-errors --to html --output notebook --output-dir /tmp /tmp/notebook.ipynb
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: session
            mountPath: "{{`{{ workflow.parameters.visitdir }}`}}"
      outputs:
        artifacts:
          - name: notebook
            path: /tmp/notebook.html
            archive:
              none: {}
          - name: image
            path: /tmp/msmapper_result.png
            archive:
              none: {}
          - name: msmapper-log
            path: /tmp/msmapper_result.log
            archive:
              none: {}
    - name: msmapper-notebook
      dag:
        tasks:
          - name: run-msmapper
            template: run-msmapper-notebook
